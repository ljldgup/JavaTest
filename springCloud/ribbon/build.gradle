buildscript {
    ext {
        springBootVersion = '2.1.6.RELEASE'
    }
    repositories {
        //在公司加启动参数-Pw, 设置正常的maven库
        if(  System.getProperty("user.name") == "jialianl" ){
            println "in company use mavencentral"
            mavenCentral()
        }
        else{
            println "at home use aliyun"
            maven{ url 'http://maven.aliyun.com/nexus/content/groups/public/' }
            maven{ url 'http://maven.aliyun.com/nexus/content/repositories/jcenter'}
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

bootJar {
	baseName = 'user'
	version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
    maven { url 'https://repo.spring.io/release/' }
    maven { url "https://repo.spring.io/libs-snapshot-local" }
    maven { url "https://repo.spring.io/libs-milestone-local" }
    maven { url "https://repo.spring.io/libs-release-local" }
}


dependencies {
    //这里用compile hystrix 获取失败，改成implementation后成功
    //使用implementation命令编译的依赖，它仅仅对当前的Module提供接口
    //好处 1. 加快编译速度。2. 隐藏对外不必要的接口。
    //就是依赖首先应该设置为implement的，如果没有错，那就用implement，如果有错，那么使用api指令
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-hystrix'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-hystrix-dashboard'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-turbine'
	implementation('org.springframework.cloud:spring-cloud-starter-netflix-ribbon')
    implementation('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
    implementation('org.springframework.boot:spring-boot-starter-actuator')
	testImplementation('org.springframework.boot:spring-boot-starter-test')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:Finchley.SR2"
	}
}

eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}
