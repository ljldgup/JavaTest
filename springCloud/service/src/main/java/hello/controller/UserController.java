package hello.controller;

import java.math.BigDecimal;
import java.sql.SQLException;

import hello.mapper.UserMapper;
import hello.service.UserService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.web.bind.annotation.*;

import hello.entity.User;

@Controller    // This means that this class is a Controller
@RequestMapping(path = "/user") // This means URL's start with /demo (after Application path)
public class UserController {
	@Autowired // This means to get the bean called userRepository
	// Which is auto-generated by Spring, we will use it to handle the data
	private UserService userService;

	@PostMapping(path = "/add") // Map ONLY GET Requests
	public @ResponseBody
	String addNewUser(@RequestBody User user) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request

//		user.setEmail(email);
		user.setAmount(new BigDecimal(.0));
		userService.saveOrUpdate(user);
		//rollback();
		return String.valueOf(user.getId());
	}


	//Transactional事务申明，采用默认设置，新建一个事务TransactionalTest1发生了回滚，TransactionalTest2
	@Transactional
	//@Transactional(rollbackFor = {SQLException.class})
	public void rollback() {
		User user = new User();
		user.setName("TransactionalTest1");
		user.setEmail("123333");
		userService.saveOrUpdate(user);
		try {
			//@Transactional默认情况下只回滚RuntimeException和Error。可以用rollbackFor = {SQLException.class}
			//throw new SQLException("exception");
			throw new SQLException("exception");
		} catch (Exception e) {
			System.out.println(e);
		}
		user = new User();
		user.setName("TransactionalTest2");
		user.setEmail("1234");
		userService.save(user);
		userService.removeById(user.getId());
	}

	@GetMapping(path = "/all")
	public @ResponseBody
	Iterable<User> getAllUsers() {
		// This returns a JSON or XML with the users
		return userService.list();
	}


}
